# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Build And Upload Release
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout Code
      uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: |
        dotnet build
        dotnet test --no-build --verbosity normal
    - name: Publish
      run: dotnet publish /home/runner/work/bordertale/bordertale/bordertale -r win-x64 -p:PublishSingleFile=true --configuration Release --self-contained true
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: release
        path: /home/runner/work/bordertale/bordertale/bordertale/bin/Release/net5.0/win-x64/publish/

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    - name: Download Previous Build Artefact
      uses: actions/download-artifact@v2
      with:
        name: release
        path: release
    - name: Zip to Archive
      id: zip_file
      run: |
        ls release
        zip bordertale-windows-${{ steps.get_version.outputs.VERSION }}.zip /home/runner/work/bordertale/bordertale/release
    - name: Create Release and Upload Assets
      id: create-release
      uses: softprops/action-gh-release@v0.1.5
      with:
         name: Release ${{ steps.get_version.outputs.VERSION }}
         files: bordertale-windows-${{ steps.get_version.outputs.VERSION }}.zip
         body_path: CHANGELOG.txt
         draft: false
         prerelease: false
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  butler_push:
    name: Push to Itch.io using Butler CLI
    runs-on: ubuntu-latest
    needs: [build, create_release]
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - name: Download Previous Build Artefact
      uses: actions/download-artifact@v2
      with:
        name: release
        path: release
    - name: Zip to Archive
      id: zip_file
      run: |
        ls release
        zip bordertale-windows-${{ steps.get_version.outputs.VERSION }}.zip /home/runner/work/bordertale/bordertale/release
    - name: Push with Butler
      id: butler
      uses: josephbmanley/butler-publish-itchio-action@master
      env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          CHANNEL: windows-beta
          ITCH_GAME: bordertale
          ITCH_USER: tejmen
          PACKAGE: bordertale-windows-${{ steps.get_version.outputs.VERSION }}.zip
          VERSION: ${{ steps.get_version.outputs.VERSION }}
